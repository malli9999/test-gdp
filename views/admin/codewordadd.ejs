<style>


        body {
          background: #eee;
        }
        .container {
          width: 40%;
          margin: 30px auto;
        }
        .tag-container {
          border: 2px solid #ccc;
          border-radius: 3px;
          background: #fff;
          display: flex;
          flex-wrap: wrap;
          align-content: flex-start;
          padding: 6px;
          overflow-x: scroll;
        }
        .tag-container .tag {
          height: 30px;
          margin: 5px;
          padding: 5px 6px;
          border: 1px solid #ccc;
          border-radius: 3px;
          background: #eee;
          display: flex;
          align-items: center;
          color: #333;
          box-shadow: 0 0 4px rgba(0, 0, 0, 0.2), inset 0 1px 1px #fff;
          cursor: default;
        }
        .tag i {
          font-size: 16px;
          color: #666;
          margin-left: 5px;
        }
        .tag-container input {
          padding: 5px;
          font-size: 16px;
          border: 0;
          outline: none;
          font-family: 'Rubik';
          color: #333;
          flex: 1;
        }
        
        
        
        </style>
        <body>
        
            <% include adminnav.ejs %>
             
            <h1>Add Codeword</h1>
        
            
        
            <div class="container">
                <br />
                <br />
                <input type="text" placeholder="Set Name">
                <div class="tag-container">
                  <input  />  
                </div>
                <button onclick="test()"></button>
              </div>
        
        </body>
        
        <script>
        
        const tagContainer = document.querySelector('.tag-container');
        const input = document.querySelector('.tag-container input');
        
        let tags = [];
        
        function test(){
            console.log(tags)
        }
        
        function createTag(label) {
          const div = document.createElement('div');
          div.setAttribute('class', 'tag');
          const span = document.createElement('span');
          span.innerHTML = label;
          const closeIcon = document.createElement('i');
          closeIcon.innerHTML = 'delete';
          closeIcon.setAttribute('class', 'material-icons');
          closeIcon.setAttribute('data-item', label);
          div.appendChild(span);
          div.appendChild(closeIcon);
          return div;
        }
        
        function clearTags() {
          document.querySelectorAll('.tag').forEach(tag => {
            tag.parentElement.removeChild(tag);
          });
        }
        
        function addTags() {
          clearTags();
          tags.slice().reverse().forEach(tag => {
            tagContainer.prepend(createTag(tag));
          });
        }
        
        input.addEventListener('keyup', (e) => {
            if (e.key === 'Enter') {
              e.target.value.split(',').forEach(tag => {
                  if(tag!=""){
                    tags.push(tag);  
                  }
              
              });
              
              addTags();
              input.value = '';
            }
        });
        document.addEventListener('click', (e) => {
          console.log(e.target.tagName);
          if (e.target.tagName === 'I') {
            const tagLabel = e.target.getAttribute('data-item');
            const index = tags.indexOf(tagLabel);
            tags = [...tags.slice(0, index), ...tags.slice(index+1)];
            addTags();    
          }
        })
        
        input.focus();
        
        
        
        </script>